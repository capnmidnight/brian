(class (Plant:BoardObject x y height)
    (define parts ["\\" "/"])
    (define a [])
    (define b [])
    (define n 0)
    (while (< n height)
        (define i (% n parts.length))
        (define j (% (+ 1 n) parts.length))
        (a.push parts[i])
        (b.push parts[j])
        (set! n (+ 1 n)))

    (set! a (a.join "\n"))
    (set! b (b.join "\n"))
    (set! height (* height 10))
    (base x (- y height) (new Animation 10 height {"10px monospace #00ff00":[a b]} 2000)))

(class (Fish:BoardObject x y)
    (base x y (new Animation 40 25 {"22px monospace #c0c0c0":["><>" "-<>"]} 1000))
    (set! this.lastBubble 0)
    (method (update dt)
        (BoardObject.prototype.update.call this dt)
        (set! this.spd (this.spd.add (new Vector 0 (* G dt))))
        (set! this.spd (this.spd.mul 0.99))
        
        (when (< this.loc.y this.animation.height)
            (set! this.spd.y 0)
            (set! this.loc.y this.animation.height))

        (when (> this.loc.y HEIGHT)
            (set! this.spd.y 0)
            (set! this.loc.y HEIGHT))

        (when (< this.loc.x 0)
            (set! this.spd.x (* -1 this.spd.x))
            (set! this.loc.x 0))

        (when (> this.loc.x (- WIDTH this.animation.width))
            (set! this.spd.x (* -1 this.spd.x))
            (set! this.loc.x (- WIDTH this.animation.width)))
        
        (set! this.lastBubble (+ this.lastBubble dt))
        (when (> this.lastBubble 2000)
            (set! this.lastBubble 0))
        (define ret [])
        (when (= this.lastBubble 0)
            (ret.push (new Bubble this.loc.x this.loc.y)))
        ret))

(class (Bubble:BoardObject x y)
    (base x y (new Animation 10 10 {"10px monospace #0000ff":["." "o" "O"]} 3000 true))
    (set! this.spd.y -0.01))